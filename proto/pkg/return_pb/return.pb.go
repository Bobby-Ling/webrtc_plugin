// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: return.proto

package return_pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	error_pb "sessionmgr/proto/pkg/error_pb"
	ready_pb "sessionmgr/proto/pkg/ready_pb"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Return struct {
	Err                  *error_pb.Error      `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	CreateSessionReturn  *ReturnCreateSession `protobuf:"bytes,2,opt,name=create_session_return,json=createSessionReturn,proto3" json:"create_session_return,omitempty"`
	OfferReturn          *ReturnOffer         `protobuf:"bytes,3,opt,name=offer_return,json=offerReturn,proto3" json:"offer_return,omitempty"`
	JoinSessionReturn    *ReturnJoinSession   `protobuf:"bytes,4,opt,name=join_session_return,json=joinSessionReturn,proto3" json:"join_session_return,omitempty"`
	AnswerReturn         *ReturnAnswer        `protobuf:"bytes,5,opt,name=answer_return,json=answerReturn,proto3" json:"answer_return,omitempty"`
	ConfirmAnswerReturn  *ReturnConfirmAnswer `protobuf:"bytes,6,opt,name=confirm_answer_return,json=confirmAnswerReturn,proto3" json:"confirm_answer_return,omitempty"`
	SendReturn           *ReturnSend          `protobuf:"bytes,7,opt,name=send_return,json=sendReturn,proto3" json:"send_return,omitempty"`
	ReadyReturn          *ReturnReady         `protobuf:"bytes,8,opt,name=ready_return,json=readyReturn,proto3" json:"ready_return,omitempty"`
	DropSessionReturn    *ReturnDropSession   `protobuf:"bytes,9,opt,name=drop_session_return,json=dropSessionReturn,proto3" json:"drop_session_return,omitempty"`
	ReloadConfigReturn   *ReturnReloadConfig  `protobuf:"bytes,10,opt,name=reload_config_return,json=reloadConfigReturn,proto3" json:"reload_config_return,omitempty"`
	DiscardReturn        *ReturnDiscard       `protobuf:"bytes,11,opt,name=discard_return,json=discardReturn,proto3" json:"discard_return,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Return) Reset()         { *m = Return{} }
func (m *Return) String() string { return proto.CompactTextString(m) }
func (*Return) ProtoMessage()    {}
func (*Return) Descriptor() ([]byte, []int) {
	return fileDescriptor_70e24eb5f90d8729, []int{0}
}
func (m *Return) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Return) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Return.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Return) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Return.Merge(m, src)
}
func (m *Return) XXX_Size() int {
	return m.Size()
}
func (m *Return) XXX_DiscardUnknown() {
	xxx_messageInfo_Return.DiscardUnknown(m)
}

var xxx_messageInfo_Return proto.InternalMessageInfo

func (m *Return) GetErr() *error_pb.Error {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *Return) GetCreateSessionReturn() *ReturnCreateSession {
	if m != nil {
		return m.CreateSessionReturn
	}
	return nil
}

func (m *Return) GetOfferReturn() *ReturnOffer {
	if m != nil {
		return m.OfferReturn
	}
	return nil
}

func (m *Return) GetJoinSessionReturn() *ReturnJoinSession {
	if m != nil {
		return m.JoinSessionReturn
	}
	return nil
}

func (m *Return) GetAnswerReturn() *ReturnAnswer {
	if m != nil {
		return m.AnswerReturn
	}
	return nil
}

func (m *Return) GetConfirmAnswerReturn() *ReturnConfirmAnswer {
	if m != nil {
		return m.ConfirmAnswerReturn
	}
	return nil
}

func (m *Return) GetSendReturn() *ReturnSend {
	if m != nil {
		return m.SendReturn
	}
	return nil
}

func (m *Return) GetReadyReturn() *ReturnReady {
	if m != nil {
		return m.ReadyReturn
	}
	return nil
}

func (m *Return) GetDropSessionReturn() *ReturnDropSession {
	if m != nil {
		return m.DropSessionReturn
	}
	return nil
}

func (m *Return) GetReloadConfigReturn() *ReturnReloadConfig {
	if m != nil {
		return m.ReloadConfigReturn
	}
	return nil
}

func (m *Return) GetDiscardReturn() *ReturnDiscard {
	if m != nil {
		return m.DiscardReturn
	}
	return nil
}

type ReturnCreateSession struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReturnCreateSession) Reset()         { *m = ReturnCreateSession{} }
func (m *ReturnCreateSession) String() string { return proto.CompactTextString(m) }
func (*ReturnCreateSession) ProtoMessage()    {}
func (*ReturnCreateSession) Descriptor() ([]byte, []int) {
	return fileDescriptor_70e24eb5f90d8729, []int{1}
}
func (m *ReturnCreateSession) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReturnCreateSession) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReturnCreateSession.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReturnCreateSession) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReturnCreateSession.Merge(m, src)
}
func (m *ReturnCreateSession) XXX_Size() int {
	return m.Size()
}
func (m *ReturnCreateSession) XXX_DiscardUnknown() {
	xxx_messageInfo_ReturnCreateSession.DiscardUnknown(m)
}

var xxx_messageInfo_ReturnCreateSession proto.InternalMessageInfo

type ReturnOffer struct {
	OfferBase64          string   `protobuf:"bytes,1,opt,name=offer_base64,json=offerBase64,proto3" json:"offer_base64,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReturnOffer) Reset()         { *m = ReturnOffer{} }
func (m *ReturnOffer) String() string { return proto.CompactTextString(m) }
func (*ReturnOffer) ProtoMessage()    {}
func (*ReturnOffer) Descriptor() ([]byte, []int) {
	return fileDescriptor_70e24eb5f90d8729, []int{2}
}
func (m *ReturnOffer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReturnOffer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReturnOffer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReturnOffer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReturnOffer.Merge(m, src)
}
func (m *ReturnOffer) XXX_Size() int {
	return m.Size()
}
func (m *ReturnOffer) XXX_DiscardUnknown() {
	xxx_messageInfo_ReturnOffer.DiscardUnknown(m)
}

var xxx_messageInfo_ReturnOffer proto.InternalMessageInfo

func (m *ReturnOffer) GetOfferBase64() string {
	if m != nil {
		return m.OfferBase64
	}
	return ""
}

type ReturnJoinSession struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReturnJoinSession) Reset()         { *m = ReturnJoinSession{} }
func (m *ReturnJoinSession) String() string { return proto.CompactTextString(m) }
func (*ReturnJoinSession) ProtoMessage()    {}
func (*ReturnJoinSession) Descriptor() ([]byte, []int) {
	return fileDescriptor_70e24eb5f90d8729, []int{3}
}
func (m *ReturnJoinSession) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReturnJoinSession) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReturnJoinSession.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReturnJoinSession) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReturnJoinSession.Merge(m, src)
}
func (m *ReturnJoinSession) XXX_Size() int {
	return m.Size()
}
func (m *ReturnJoinSession) XXX_DiscardUnknown() {
	xxx_messageInfo_ReturnJoinSession.DiscardUnknown(m)
}

var xxx_messageInfo_ReturnJoinSession proto.InternalMessageInfo

type ReturnAnswer struct {
	AnswerBase64         string   `protobuf:"bytes,1,opt,name=answer_base64,json=answerBase64,proto3" json:"answer_base64,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReturnAnswer) Reset()         { *m = ReturnAnswer{} }
func (m *ReturnAnswer) String() string { return proto.CompactTextString(m) }
func (*ReturnAnswer) ProtoMessage()    {}
func (*ReturnAnswer) Descriptor() ([]byte, []int) {
	return fileDescriptor_70e24eb5f90d8729, []int{4}
}
func (m *ReturnAnswer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReturnAnswer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReturnAnswer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReturnAnswer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReturnAnswer.Merge(m, src)
}
func (m *ReturnAnswer) XXX_Size() int {
	return m.Size()
}
func (m *ReturnAnswer) XXX_DiscardUnknown() {
	xxx_messageInfo_ReturnAnswer.DiscardUnknown(m)
}

var xxx_messageInfo_ReturnAnswer proto.InternalMessageInfo

func (m *ReturnAnswer) GetAnswerBase64() string {
	if m != nil {
		return m.AnswerBase64
	}
	return ""
}

type ReturnConfirmAnswer struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReturnConfirmAnswer) Reset()         { *m = ReturnConfirmAnswer{} }
func (m *ReturnConfirmAnswer) String() string { return proto.CompactTextString(m) }
func (*ReturnConfirmAnswer) ProtoMessage()    {}
func (*ReturnConfirmAnswer) Descriptor() ([]byte, []int) {
	return fileDescriptor_70e24eb5f90d8729, []int{5}
}
func (m *ReturnConfirmAnswer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReturnConfirmAnswer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReturnConfirmAnswer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReturnConfirmAnswer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReturnConfirmAnswer.Merge(m, src)
}
func (m *ReturnConfirmAnswer) XXX_Size() int {
	return m.Size()
}
func (m *ReturnConfirmAnswer) XXX_DiscardUnknown() {
	xxx_messageInfo_ReturnConfirmAnswer.DiscardUnknown(m)
}

var xxx_messageInfo_ReturnConfirmAnswer proto.InternalMessageInfo

type ReturnSend struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReturnSend) Reset()         { *m = ReturnSend{} }
func (m *ReturnSend) String() string { return proto.CompactTextString(m) }
func (*ReturnSend) ProtoMessage()    {}
func (*ReturnSend) Descriptor() ([]byte, []int) {
	return fileDescriptor_70e24eb5f90d8729, []int{6}
}
func (m *ReturnSend) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReturnSend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReturnSend.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReturnSend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReturnSend.Merge(m, src)
}
func (m *ReturnSend) XXX_Size() int {
	return m.Size()
}
func (m *ReturnSend) XXX_DiscardUnknown() {
	xxx_messageInfo_ReturnSend.DiscardUnknown(m)
}

var xxx_messageInfo_ReturnSend proto.InternalMessageInfo

type ReturnReady struct {
	ReadyList            []*ready_pb.Ready `protobuf:"bytes,1,rep,name=ready_list,json=readyList,proto3" json:"ready_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ReturnReady) Reset()         { *m = ReturnReady{} }
func (m *ReturnReady) String() string { return proto.CompactTextString(m) }
func (*ReturnReady) ProtoMessage()    {}
func (*ReturnReady) Descriptor() ([]byte, []int) {
	return fileDescriptor_70e24eb5f90d8729, []int{7}
}
func (m *ReturnReady) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReturnReady) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReturnReady.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReturnReady) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReturnReady.Merge(m, src)
}
func (m *ReturnReady) XXX_Size() int {
	return m.Size()
}
func (m *ReturnReady) XXX_DiscardUnknown() {
	xxx_messageInfo_ReturnReady.DiscardUnknown(m)
}

var xxx_messageInfo_ReturnReady proto.InternalMessageInfo

func (m *ReturnReady) GetReadyList() []*ready_pb.Ready {
	if m != nil {
		return m.ReadyList
	}
	return nil
}

type ReturnDropSession struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReturnDropSession) Reset()         { *m = ReturnDropSession{} }
func (m *ReturnDropSession) String() string { return proto.CompactTextString(m) }
func (*ReturnDropSession) ProtoMessage()    {}
func (*ReturnDropSession) Descriptor() ([]byte, []int) {
	return fileDescriptor_70e24eb5f90d8729, []int{8}
}
func (m *ReturnDropSession) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReturnDropSession) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReturnDropSession.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReturnDropSession) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReturnDropSession.Merge(m, src)
}
func (m *ReturnDropSession) XXX_Size() int {
	return m.Size()
}
func (m *ReturnDropSession) XXX_DiscardUnknown() {
	xxx_messageInfo_ReturnDropSession.DiscardUnknown(m)
}

var xxx_messageInfo_ReturnDropSession proto.InternalMessageInfo

type ReturnReloadConfig struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReturnReloadConfig) Reset()         { *m = ReturnReloadConfig{} }
func (m *ReturnReloadConfig) String() string { return proto.CompactTextString(m) }
func (*ReturnReloadConfig) ProtoMessage()    {}
func (*ReturnReloadConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_70e24eb5f90d8729, []int{9}
}
func (m *ReturnReloadConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReturnReloadConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReturnReloadConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReturnReloadConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReturnReloadConfig.Merge(m, src)
}
func (m *ReturnReloadConfig) XXX_Size() int {
	return m.Size()
}
func (m *ReturnReloadConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ReturnReloadConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ReturnReloadConfig proto.InternalMessageInfo

type ReturnDiscard struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReturnDiscard) Reset()         { *m = ReturnDiscard{} }
func (m *ReturnDiscard) String() string { return proto.CompactTextString(m) }
func (*ReturnDiscard) ProtoMessage()    {}
func (*ReturnDiscard) Descriptor() ([]byte, []int) {
	return fileDescriptor_70e24eb5f90d8729, []int{10}
}
func (m *ReturnDiscard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReturnDiscard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReturnDiscard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReturnDiscard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReturnDiscard.Merge(m, src)
}
func (m *ReturnDiscard) XXX_Size() int {
	return m.Size()
}
func (m *ReturnDiscard) XXX_DiscardUnknown() {
	xxx_messageInfo_ReturnDiscard.DiscardUnknown(m)
}

var xxx_messageInfo_ReturnDiscard proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Return)(nil), "Return")
	proto.RegisterType((*ReturnCreateSession)(nil), "ReturnCreateSession")
	proto.RegisterType((*ReturnOffer)(nil), "ReturnOffer")
	proto.RegisterType((*ReturnJoinSession)(nil), "ReturnJoinSession")
	proto.RegisterType((*ReturnAnswer)(nil), "ReturnAnswer")
	proto.RegisterType((*ReturnConfirmAnswer)(nil), "ReturnConfirmAnswer")
	proto.RegisterType((*ReturnSend)(nil), "ReturnSend")
	proto.RegisterType((*ReturnReady)(nil), "ReturnReady")
	proto.RegisterType((*ReturnDropSession)(nil), "ReturnDropSession")
	proto.RegisterType((*ReturnReloadConfig)(nil), "ReturnReloadConfig")
	proto.RegisterType((*ReturnDiscard)(nil), "ReturnDiscard")
}

func init() { proto.RegisterFile("return.proto", fileDescriptor_70e24eb5f90d8729) }

var fileDescriptor_70e24eb5f90d8729 = []byte{
	// 479 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x53, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0xc5, 0x84, 0x06, 0x32, 0x76, 0x8a, 0x6a, 0xa7, 0x52, 0xc4, 0xc1, 0x2a, 0x8b, 0x90, 0x38,
	0xa0, 0xa4, 0x6a, 0x0b, 0x77, 0x02, 0x95, 0x10, 0x42, 0x42, 0xda, 0xde, 0xb8, 0x58, 0x4e, 0xbc,
	0x89, 0x5c, 0x5a, 0xaf, 0x35, 0x6b, 0x84, 0xb8, 0xf1, 0x19, 0x7c, 0x12, 0x47, 0x3e, 0x01, 0x85,
	0x1f, 0x41, 0x9e, 0xd9, 0x8d, 0xbd, 0x0d, 0xc7, 0xd9, 0x79, 0xef, 0xed, 0xce, 0x7b, 0xb3, 0x10,
	0xa1, 0x6a, 0xbe, 0x62, 0x35, 0xab, 0x51, 0x37, 0xfa, 0x49, 0xa8, 0x10, 0x35, 0xba, 0x02, 0x55,
	0x5e, 0x7c, 0xe7, 0x42, 0xfc, 0x38, 0x80, 0xa1, 0x24, 0x68, 0x3c, 0x85, 0x81, 0x42, 0x9c, 0x06,
	0x27, 0xc1, 0x8b, 0xf0, 0x6c, 0x38, 0xbb, 0x6c, 0x29, 0xb2, 0x3d, 0x8a, 0xdf, 0xc3, 0xf1, 0x0a,
	0x55, 0xde, 0xa8, 0xcc, 0x28, 0x63, 0x4a, 0x5d, 0x65, 0xac, 0x3e, 0xbd, 0x4f, 0xd8, 0xc9, 0x8c,
	0x15, 0xde, 0x12, 0xe6, 0x8a, 0x21, 0x32, 0x59, 0x79, 0x25, 0xdf, 0x31, 0x87, 0x48, 0xaf, 0xd7,
	0x0a, 0x9d, 0xc0, 0x80, 0x04, 0x22, 0x2b, 0xf0, 0xa9, 0x6d, 0xc9, 0x90, 0x10, 0x96, 0xb0, 0x80,
	0xe4, 0x5a, 0x97, 0xd5, 0xdd, 0x8b, 0x1f, 0x10, 0x2f, 0xb6, 0xbc, 0x0f, 0xba, 0xac, 0xdc, 0x3d,
	0x47, 0xd7, 0xbd, 0x82, 0x35, 0xce, 0x60, 0x9c, 0x57, 0xe6, 0x5b, 0x77, 0xeb, 0x01, 0xb1, 0xc7,
	0x96, 0xfd, 0x86, 0x7a, 0x32, 0x62, 0x8c, 0xe5, 0xb4, 0x23, 0xeb, 0x6a, 0x5d, 0xe2, 0x6d, 0xe6,
	0x73, 0x87, 0xfe, 0xc8, 0x8c, 0xb1, 0x12, 0xc9, 0xca, 0x2b, 0x59, 0xe9, 0x25, 0x84, 0x46, 0x55,
	0x85, 0xe3, 0x3f, 0x24, 0x7e, 0x68, 0xf9, 0x57, 0xaa, 0x2a, 0x24, 0xb4, 0xfd, 0xce, 0x20, 0x8a,
	0xc7, 0xc1, 0x1f, 0x79, 0x06, 0xc9, 0xb6, 0x25, 0x39, 0xc0, 0xce, 0xa0, 0x02, 0x75, 0x7d, 0xd7,
	0xa0, 0x91, 0x67, 0xd0, 0x3b, 0xd4, 0xf5, 0xce, 0xa0, 0xa2, 0x57, 0xb0, 0xc6, 0x25, 0x4c, 0x50,
	0xdd, 0xe8, 0xbc, 0xc8, 0x68, 0x80, 0x8d, 0x13, 0x01, 0x12, 0x49, 0x76, 0x97, 0xb7, 0x10, 0x9a,
	0x78, 0x23, 0x63, 0xec, 0x57, 0x2c, 0xf3, 0x0a, 0x0e, 0x8b, 0xd2, 0xac, 0x72, 0xdc, 0x0d, 0x1b,
	0x92, 0xc0, 0xa1, 0x7b, 0x05, 0x37, 0xe5, 0xd8, 0xa2, 0xf8, 0x54, 0x1c, 0x43, 0xf2, 0x9f, 0xfd,
	0x11, 0xa7, 0x10, 0xf6, 0xb6, 0x22, 0x7e, 0xea, 0x36, 0x67, 0x99, 0x1b, 0xf5, 0xfa, 0x82, 0xd6,
	0x74, 0x64, 0x77, 0x65, 0x41, 0x47, 0x22, 0x81, 0xa3, 0xbd, 0x7d, 0x10, 0xe7, 0x10, 0xf5, 0x63,
	0x8e, 0x9f, 0xed, 0x96, 0xc1, 0x13, 0xb2, 0xe9, 0x5b, 0xa5, 0xee, 0x49, 0xfd, 0x40, 0x45, 0x04,
	0xd0, 0xc5, 0x26, 0x2e, 0xdc, 0x03, 0x29, 0x95, 0xf8, 0x39, 0x00, 0x27, 0x77, 0x53, 0x9a, 0x66,
	0x1a, 0x9c, 0x0c, 0xe8, 0x17, 0x71, 0x62, 0x23, 0xea, 0x7c, 0x2c, 0x4d, 0xd3, 0x3d, 0xb2, 0x97,
	0x89, 0x98, 0x40, 0xbc, 0xef, 0xb1, 0x78, 0x0c, 0x63, 0xcf, 0xb8, 0xc5, 0xe9, 0xaf, 0x6d, 0x1a,
	0xfc, 0xde, 0xa6, 0xc1, 0x9f, 0x6d, 0x1a, 0xfc, 0xfc, 0x9b, 0xde, 0xfb, 0x9c, 0xda, 0xd8, 0x6f,
	0x37, 0x38, 0xa7, 0x0f, 0x3d, 0xaf, 0xbf, 0x6c, 0xe6, 0xec, 0x7e, 0x56, 0x2f, 0x97, 0x43, 0x3a,
	0x3c, 0xff, 0x17, 0x00, 0x00, 0xff, 0xff, 0x61, 0xae, 0xed, 0x44, 0x0f, 0x04, 0x00, 0x00,
}

func (m *Return) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Return) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Return) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.DiscardReturn != nil {
		{
			size, err := m.DiscardReturn.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintReturn(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	if m.ReloadConfigReturn != nil {
		{
			size, err := m.ReloadConfigReturn.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintReturn(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	if m.DropSessionReturn != nil {
		{
			size, err := m.DropSessionReturn.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintReturn(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.ReadyReturn != nil {
		{
			size, err := m.ReadyReturn.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintReturn(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.SendReturn != nil {
		{
			size, err := m.SendReturn.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintReturn(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.ConfirmAnswerReturn != nil {
		{
			size, err := m.ConfirmAnswerReturn.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintReturn(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.AnswerReturn != nil {
		{
			size, err := m.AnswerReturn.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintReturn(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.JoinSessionReturn != nil {
		{
			size, err := m.JoinSessionReturn.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintReturn(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.OfferReturn != nil {
		{
			size, err := m.OfferReturn.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintReturn(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.CreateSessionReturn != nil {
		{
			size, err := m.CreateSessionReturn.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintReturn(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Err != nil {
		{
			size, err := m.Err.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintReturn(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ReturnCreateSession) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReturnCreateSession) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReturnCreateSession) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ReturnOffer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReturnOffer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReturnOffer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.OfferBase64) > 0 {
		i -= len(m.OfferBase64)
		copy(dAtA[i:], m.OfferBase64)
		i = encodeVarintReturn(dAtA, i, uint64(len(m.OfferBase64)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ReturnJoinSession) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReturnJoinSession) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReturnJoinSession) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ReturnAnswer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReturnAnswer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReturnAnswer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.AnswerBase64) > 0 {
		i -= len(m.AnswerBase64)
		copy(dAtA[i:], m.AnswerBase64)
		i = encodeVarintReturn(dAtA, i, uint64(len(m.AnswerBase64)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ReturnConfirmAnswer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReturnConfirmAnswer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReturnConfirmAnswer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ReturnSend) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReturnSend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReturnSend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ReturnReady) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReturnReady) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReturnReady) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ReadyList) > 0 {
		for iNdEx := len(m.ReadyList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ReadyList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintReturn(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ReturnDropSession) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReturnDropSession) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReturnDropSession) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ReturnReloadConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReturnReloadConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReturnReloadConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ReturnDiscard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReturnDiscard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReturnDiscard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func encodeVarintReturn(dAtA []byte, offset int, v uint64) int {
	offset -= sovReturn(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Return) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Err != nil {
		l = m.Err.Size()
		n += 1 + l + sovReturn(uint64(l))
	}
	if m.CreateSessionReturn != nil {
		l = m.CreateSessionReturn.Size()
		n += 1 + l + sovReturn(uint64(l))
	}
	if m.OfferReturn != nil {
		l = m.OfferReturn.Size()
		n += 1 + l + sovReturn(uint64(l))
	}
	if m.JoinSessionReturn != nil {
		l = m.JoinSessionReturn.Size()
		n += 1 + l + sovReturn(uint64(l))
	}
	if m.AnswerReturn != nil {
		l = m.AnswerReturn.Size()
		n += 1 + l + sovReturn(uint64(l))
	}
	if m.ConfirmAnswerReturn != nil {
		l = m.ConfirmAnswerReturn.Size()
		n += 1 + l + sovReturn(uint64(l))
	}
	if m.SendReturn != nil {
		l = m.SendReturn.Size()
		n += 1 + l + sovReturn(uint64(l))
	}
	if m.ReadyReturn != nil {
		l = m.ReadyReturn.Size()
		n += 1 + l + sovReturn(uint64(l))
	}
	if m.DropSessionReturn != nil {
		l = m.DropSessionReturn.Size()
		n += 1 + l + sovReturn(uint64(l))
	}
	if m.ReloadConfigReturn != nil {
		l = m.ReloadConfigReturn.Size()
		n += 1 + l + sovReturn(uint64(l))
	}
	if m.DiscardReturn != nil {
		l = m.DiscardReturn.Size()
		n += 1 + l + sovReturn(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReturnCreateSession) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReturnOffer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.OfferBase64)
	if l > 0 {
		n += 1 + l + sovReturn(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReturnJoinSession) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReturnAnswer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AnswerBase64)
	if l > 0 {
		n += 1 + l + sovReturn(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReturnConfirmAnswer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReturnSend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReturnReady) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ReadyList) > 0 {
		for _, e := range m.ReadyList {
			l = e.Size()
			n += 1 + l + sovReturn(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReturnDropSession) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReturnReloadConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReturnDiscard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovReturn(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozReturn(x uint64) (n int) {
	return sovReturn(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Return) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowReturn
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Return: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Return: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Err", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReturn
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthReturn
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthReturn
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Err == nil {
				m.Err = &error_pb.Error{}
			}
			if err := m.Err.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateSessionReturn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReturn
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthReturn
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthReturn
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreateSessionReturn == nil {
				m.CreateSessionReturn = &ReturnCreateSession{}
			}
			if err := m.CreateSessionReturn.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OfferReturn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReturn
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthReturn
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthReturn
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OfferReturn == nil {
				m.OfferReturn = &ReturnOffer{}
			}
			if err := m.OfferReturn.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JoinSessionReturn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReturn
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthReturn
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthReturn
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.JoinSessionReturn == nil {
				m.JoinSessionReturn = &ReturnJoinSession{}
			}
			if err := m.JoinSessionReturn.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AnswerReturn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReturn
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthReturn
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthReturn
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AnswerReturn == nil {
				m.AnswerReturn = &ReturnAnswer{}
			}
			if err := m.AnswerReturn.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfirmAnswerReturn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReturn
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthReturn
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthReturn
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ConfirmAnswerReturn == nil {
				m.ConfirmAnswerReturn = &ReturnConfirmAnswer{}
			}
			if err := m.ConfirmAnswerReturn.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SendReturn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReturn
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthReturn
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthReturn
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SendReturn == nil {
				m.SendReturn = &ReturnSend{}
			}
			if err := m.SendReturn.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReadyReturn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReturn
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthReturn
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthReturn
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReadyReturn == nil {
				m.ReadyReturn = &ReturnReady{}
			}
			if err := m.ReadyReturn.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DropSessionReturn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReturn
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthReturn
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthReturn
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DropSessionReturn == nil {
				m.DropSessionReturn = &ReturnDropSession{}
			}
			if err := m.DropSessionReturn.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReloadConfigReturn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReturn
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthReturn
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthReturn
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReloadConfigReturn == nil {
				m.ReloadConfigReturn = &ReturnReloadConfig{}
			}
			if err := m.ReloadConfigReturn.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DiscardReturn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReturn
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthReturn
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthReturn
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DiscardReturn == nil {
				m.DiscardReturn = &ReturnDiscard{}
			}
			if err := m.DiscardReturn.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipReturn(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthReturn
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReturnCreateSession) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowReturn
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReturnCreateSession: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReturnCreateSession: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipReturn(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthReturn
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReturnOffer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowReturn
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReturnOffer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReturnOffer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OfferBase64", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReturn
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthReturn
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthReturn
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OfferBase64 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipReturn(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthReturn
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReturnJoinSession) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowReturn
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReturnJoinSession: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReturnJoinSession: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipReturn(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthReturn
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReturnAnswer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowReturn
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReturnAnswer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReturnAnswer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AnswerBase64", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReturn
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthReturn
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthReturn
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AnswerBase64 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipReturn(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthReturn
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReturnConfirmAnswer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowReturn
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReturnConfirmAnswer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReturnConfirmAnswer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipReturn(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthReturn
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReturnSend) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowReturn
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReturnSend: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReturnSend: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipReturn(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthReturn
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReturnReady) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowReturn
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReturnReady: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReturnReady: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReadyList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReturn
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthReturn
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthReturn
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReadyList = append(m.ReadyList, &ready_pb.Ready{})
			if err := m.ReadyList[len(m.ReadyList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipReturn(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthReturn
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReturnDropSession) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowReturn
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReturnDropSession: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReturnDropSession: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipReturn(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthReturn
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReturnReloadConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowReturn
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReturnReloadConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReturnReloadConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipReturn(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthReturn
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReturnDiscard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowReturn
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReturnDiscard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReturnDiscard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipReturn(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthReturn
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipReturn(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowReturn
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowReturn
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowReturn
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthReturn
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupReturn
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthReturn
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthReturn        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowReturn          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupReturn = fmt.Errorf("proto: unexpected end of group")
)
